/*
 Project Title: Lab 2 Part 2
 Student Name: Sally Luc
 Course Code & Title: DIGF 2B03 Physical Computing
 OCAD University
 Created on Saturday January 17th, 2015
 
 Based on
 Debounce, David A. Mellis, http://www.arduino.cc/en/Tutorial/Debounce
 BlinkWithoutDelay, David A. Mellis, http://arduino.cc/en/Tutorial/BlinkWithoutDelay
 */

/*
 Variable Dictionary 
 
 Variable Name                 Type                   Description
 button                        int                    Retrieves button input value from input digital pin 3. 
 ledPin1                       int                    Sends signals through input digital pin 10 to control LED.
 ledPin2                       int                    Sends signals through input digital pin 9 to control LED.
 ledPin3                       int                    Sends signals through input digital pin 8 to control LED.
 ledState                      int                    Sets the LED state to either HIGH or LOW.
 
 buttonPressed                 int                    Reads the value of button if it is HIGH/LOW.
 lastButtonState               int                    Checks if the last button state was HIGH/LOW in each loop for the button. 
 buttonState                   int                    Stores the current state of button. 
 
 timesClicked                  int                    Checks how many times have the button been pressed. 
 
 delaySpeed                    long                   Sets the delay speed of how long the LED should turn on/off.
 previousMs                    long                   Sets the previous millisecond values to figure out when LED should turn on/off. 
 
 currentLED                    int                    Checks for the current LED that is lighting up.
 previousLED                   int                    Stores the value of what the previous LED that lit up was.
 flashCheck                    int                    Stores how many times a certain LED has flashed. 
 */

//Variables
int button = 3;
int ledPin1 = 10;
int ledPin2 = 9;
int ledPin3 = 8;

int ledState = LOW;

int buttonPressed;
int lastButtonState = LOW;
int buttonState;

int timesClicked = 0;

long delaySpeed = 500;
long previousMs = 0; 

int currentLED = 0; 
int previousLED = 1;
int flashCheck = 0; 

// Setup - Declares the type of what each pin will do - either retrieve input or send out output signals. 
void setup ()
{
  pinMode (button, INPUT);
  pinMode (ledPin1, OUTPUT);
  pinMode (ledPin2, OUTPUT);
  pinMode (ledPin3, OUTPUT);
  Serial.begin(9600);
}

//Loop
void loop()
{

  // Local variable - stores the current millisecond value
  unsigned long currentMs = millis();

  // Stores the last button state, which later is used to prevent the program from responding as if button was pressed multiple times.
  lastButtonState = buttonPressed;
  // Reads the button states - if the button was pressed or not
  buttonPressed = digitalRead(button);

  // Checks if the button state has changed from the loop before and now
  if (buttonPressed != buttonState) {
    buttonState = buttonPressed;

    // Keeps a counter to see how many times a button is pressed. Stores a value in timesClicked to change through patterns. 
    if (buttonState == HIGH) {
      timesClicked++;
      // Resets the timesClicked var to 0 if button is pressed every 4th time
      if (timesClicked > 3)
        timesClicked = 0; 
    }
  }

  // Turns off all of the LEDs if button was not clicked or has clicked 4 times. 
  if (timesClicked ==0)
  {
    digitalWrite(ledPin1, LOW);
    digitalWrite(ledPin2, LOW);
    digitalWrite(ledPin3, LOW);
  }
  else if (timesClicked ==1) // Makes the LED flash at a medium speed (ever 500 ms)
  {
    delaySpeed = 500;


    // previousMS value only changes if the difference of the currentMS and previousMS is greater than the delay speed.
    //This block of code checks if the LED should blink, depending on the last time the LED blinked.

    // If statement checks if the different of currentMS and previousMS is greater than delaySpeed
    if(currentMs - previousMs > delaySpeed) {
      previousMs = currentMs; 

      // Toggle the LED state
      if (ledState == LOW)
        ledState = HIGH;
      else
        ledState = LOW;

      // Makes LEDs 1 and 3 flash at the same time. Makes the second LED flash whenever LEDs 1 and 3 are off. 
      digitalWrite(ledPin1, ledState);
      digitalWrite(ledPin2, !ledState);
      digitalWrite(ledPin3, ledState);
    }
  }
  else if (timesClicked ==2) // Makes LEDs light up in sequence
  {
    // Set delay speed
    delaySpeed == 300; 


    // previousMS value only changes if the difference of the currentMS and previousMS is greater than the delay speed.
    //This block of code checks if the LED should blink, depending on the last time the LED blinked.

    // If statement checks if the different of currentMS and previousMS is greater than delaySpeed
    if(currentMs - previousMs > delaySpeed) {
      previousMs = currentMs; 
      previousLED = currentLED;

      // Checks which LED is set to light up, and sets it to light up in the sequence.
      if (currentLED == 1){
        digitalWrite(ledPin1, HIGH);
        digitalWrite(ledPin2, LOW);
        digitalWrite(ledPin3, LOW);
      }
      else if (currentLED ==2)
      {
        digitalWrite(ledPin1, LOW);
        digitalWrite(ledPin2, HIGH);
        digitalWrite(ledPin3, LOW);        
      }
      else if (currentLED ==3)
      {
        digitalWrite(ledPin1, LOW);
        digitalWrite(ledPin2, LOW);
        digitalWrite(ledPin3, HIGH); 
      }
      else // Resets all of the LEDs if values go beyond 3. 
      {
        digitalWrite(ledPin1, LOW);
        digitalWrite(ledPin2, LOW);
        digitalWrite(ledPin3, LOW); 
      }
    }
    else
    {
      // Checks which LED is lit. Sets the next LED to light up if previousLED is the same as the current number
      if (previousLED ==currentLED){
        currentLED++;

        // Resets the current LED to the first LED if the count is beyond 3. 
        if (currentLED > 3)
          currentLED = 1; 
      }
    }
  }
  else if (timesClicked ==3) // Makes each LED flash twice in sequence.
  {
    // Sets delay speed. 
    delaySpeed = 300;

    // previousMS value only changes if the difference of the currentMS and previousMS is greater than the delay speed.
    //This block of code checks if the LED should blink, depending on the last time the LED blinked.

    // If statement checks if the different of currentMS and previousMS is greater than delaySpeed
    if(currentMs - previousMs > delaySpeed) {
      previousMs = currentMs; 
      previousLED = currentLED;

      // Toggle the LED state
      if (ledState == LOW)
        ledState = HIGH;
      else
        ledState = LOW;

      // Checks which LED is set to light up, and sets it to light up in the sequence.
      if (currentLED == 1){
        digitalWrite(ledPin1, ledState);
        digitalWrite(ledPin2, LOW);
        digitalWrite(ledPin3, LOW);
      }
      else if (currentLED ==2)
      {
        digitalWrite(ledPin1, LOW);
        digitalWrite(ledPin2, ledState);
        digitalWrite(ledPin3, LOW);        
      }
      else if (currentLED ==3)
      {
        digitalWrite(ledPin1, LOW);
        digitalWrite(ledPin2, LOW);
        digitalWrite(ledPin3, ledState); 
      }
      else // Resets all LEDs to turn off. 
      {
        digitalWrite(ledPin1, LOW);
        digitalWrite(ledPin2, LOW);
        digitalWrite(ledPin3, LOW); 
      }
    }
    else
    {
      // Checks how many times the LED has flashed. 
      if (previousLED ==currentLED){
        flashCheck++;

        // Checks if LED flashed twice already (range is 4 because it checks for both ON and OFF state).
        if (flashCheck >=0 && flashCheck <=3)
        {
          previousLED = 0;
        }
        else if (flashCheck==4)
        {
          // Set to the next LED to light up if previous LED flashed twice.
          currentLED++;
        }
        else
          flashCheck = 0; // Reset the flash check

        // Make LED switch back to first LED if third LED flashed already.
        if (currentLED > 3)
          currentLED = 1; 
      }
    }
  }

}


